# Based on http://docs.openstack.org/high-availability-guide/content/ha-aa-haproxy.html
global
	log /dev/log local0
	log /dev/log local1 notice
	chroot /var/lib/haproxy
	user haproxy
	group haproxy
	daemon

defaults
	log global
	retries 3
	timeout queue 1m
	timeout connect 10s
	timeout client 1m
	timeout server 1m
	timeout check 10s
	timeout  http-request 10s
	maxconn 8000
	mode http
	option httplog
	option	dontlognull
	option redispatch

listen keystone_admin_cluster
	bind :35357
	option tcpka
	option httpchk
	option tcplog
	balance source
	server openstack0 openstack0:35358 check inter 2000 rise 2 fall 5
	server openstack1 openstack1:35358 check inter 2000 rise 2 fall 5

listen keystone_public_internal_cluster
	bind :5000
	option tcpka
	option httpchk
	option tcplog
	balance source
	server openstack0 openstack0:5001 check inter 2000 rise 2 fall 5
	server openstack1 openstack1:5001 check inter 2000 rise 2 fall 5

#listen dashboard_cluster
#  bind <Virtual IP>:443
#  balance  source
#  option  tcpka
#  option  httpchk
#  option  tcplog
#  server controller1 10.0.0.1:443 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:443 check inter 2000 rise 2 fall 5
#
#listen galera_cluster
#  bind *:3306
#  balance source
#  option httpchk
#  server openstack1 openstack1:3306 check port 9200 inter 2000 rise 2 fall 5
#  server openstack2 openstack2:3306 check port 9200 inter 2000 rise 2 fall 5
#  server openstack3 openstack3:3306 check port 9200 inter 2000 rise 2 fall 5
#
#listen glance_api_cluster
#  bind <Virtual IP>:9292
#  balance  source
#  option  tcpka
#  option  httpchk
#  option  tcplog
#  server controller1 10.0.0.1:9292 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:9292 check inter 2000 rise 2 fall 5
#
#listen glance_registry_cluster
#  bind <Virtual IP>:9191
#  balance  source
#  option  tcpka
#  option  tcplog
#  server controller1 10.0.0.1:9191 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:9191 check inter 2000 rise 2 fall 5
#
#
#listen nova_ec2_api_cluster
#  bind <Virtual IP>:8773
#  balance  source
#  option  tcpka
#  option  tcplog
#  server controller1 10.0.0.1:8773 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:8773 check inter 2000 rise 2 fall 5
#
#listen nova_compute_api_cluster
#  bind <Virtual IP>:8774
#  balance  source
#  option  tcpka
#  option  httpchk
#  option  tcplog
#  server controller1 10.0.0.1:8774 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:8774 check inter 2000 rise 2 fall 5
#
#listen nova_metadata_api_cluster
#  bind <Virtual IP>:8775
#  balance  source
#  option  tcpka
#  option  tcplog
#  server controller1 10.0.0.1:8775 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:8775 check inter 2000 rise 2 fall 5
#
#listen cinder_api_cluster
#  bind <Virtual IP>:8776
#  balance  source
#  option  tcpka
#  option  httpchk
#  option  tcplog
#  server controller1 10.0.0.1:8776 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:8776 check inter 2000 rise 2 fall 5
#
#listen ceilometer_api_cluster
#  bind <Virtual IP>:8777
#  balance  source
#  option  tcpka
#  option  httpchk
#  option  tcplog
#  server controller1 10.0.0.1:8774 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:8774 check inter 2000 rise 2 fall 5
#
#listen spice_cluster
#  bind <Virtual IP>:6082
#  balance  source
#  option  tcpka
#  option  tcplog
#  server controller1 10.0.0.1:6080 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:6080 check inter 2000 rise 2 fall 5
#
#listen neutron_api_cluster
#  bind <Virtual IP>:9696
#  balance  source
#  option  tcpka
#  option  httpchk
#  option  tcplog
#  server controller1 10.0.0.1:9696 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:9696 check inter 2000 rise 2 fall 5
#
#listen swift_proxy_cluster
#  bind <Virtual IP>:8080
#  balance  source
#  option  tcplog
#  option  tcpka
#  server controller1 10.0.0.1:8080 check inter 2000 rise 2 fall 5
#  server controller2 10.0.0.2:8080 check inter 2000 rise 2 fall 5
